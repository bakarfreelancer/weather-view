[{"/home/huraira/Computer Learning/GIT Projects/weather-view/src/App.js":"1","/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Header.js":"2","/home/huraira/Computer Learning/GIT Projects/weather-view/src/reportWebVitals.js":"3","/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Search.js":"4","/home/huraira/Computer Learning/GIT Projects/weather-view/src/GlobalContext.js":"5","/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/ShowWeather.js":"6","/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/forecast.js":"7","/home/huraira/Computer Learning/GIT Projects/weather-view/src/index.js":"8","/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/getLocation.js":"9","/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/unixToStandard.js":"10","/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/windDirection.js":"11","/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Footer.js":"12"},{"size":586,"mtime":1609408263649,"results":"13","hashOfConfig":"14"},{"size":847,"mtime":1609408038596,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608654112082,"results":"16","hashOfConfig":"14"},{"size":1836,"mtime":1609406525924,"results":"17","hashOfConfig":"14"},{"size":359,"mtime":1608978300771,"results":"18","hashOfConfig":"14"},{"size":8022,"mtime":1609486937736,"results":"19","hashOfConfig":"14"},{"size":345,"mtime":1609327528268,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":1608654112082,"results":"21","hashOfConfig":"14"},{"size":550,"mtime":1609348165035,"results":"22","hashOfConfig":"14"},{"size":736,"mtime":1609401217189,"results":"23","hashOfConfig":"14"},{"size":347,"mtime":1609339538719,"results":"24","hashOfConfig":"14"},{"size":331,"mtime":1609405635384,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"14dau8m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/huraira/Computer Learning/GIT Projects/weather-view/src/App.js",[],["58","59"],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Header.js",[],["60","61"],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/reportWebVitals.js",[],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Search.js",["62"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formGrid: {\n    width: \"fit-content\",\n    margin: \"auto\",\n  },\n  searchInput: {\n    width: \"300px\",\n  },\n  searchButton: {\n    backgroundImage: \"linear-gradient(to bottom right,#0c6ded, #7aecfc)\",\n    color: \"#fff\",\n  },\n}));\n\nexport default function Search() {\n  const classes = useStyles();\n  const [address, setAddress] = useState(\"\");\n  const [global, setGlobal] = useContext(GlobalContext);\n  const updateAddress = (e) => {\n    setAddress(e.target.value);\n  };\n  const getAddress = () => {\n    setGlobal({ address });\n    setAddress(\"\");\n  };\n\n  return (\n    <div>\n      <div className={classes.margin}>\n        <Grid\n          container\n          spacing={1}\n          className={classes.formGrid}\n          alignItems=\"flex-end\">\n          <Grid item>\n            <LocationOnOutlinedIcon />\n          </Grid>\n          <Grid item>\n            <TextField\n              name=\"address\"\n              value={address}\n              onChange={updateAddress}\n              label=\"Enter city name\"\n              className={classes.searchInput}\n            />\n          </Grid>\n          <Grid item>\n            <Button onClick={getAddress} className={classes.searchButton}>\n              <SearchOutlinedIcon />\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","/home/huraira/Computer Learning/GIT Projects/weather-view/src/GlobalContext.js",[],["63","64"],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/ShowWeather.js",["65"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { getLocation } from \"../services/getLocation\";\nimport { forecast } from \"../services/forecast\";\nimport { windDirection } from \"../services/windDirection\";\nimport {\n  unixToStandard,\n  unixToStandardFull,\n  unixToStandard12Hrs,\n} from \"../services/unixToStandard\";\n\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"left\",\n  },\n  paper: {\n    padding: theme.spacing(3),\n    marginBottom: \"30px\",\n    color: theme.palette.text.secondary,\n  },\n  address: {\n    color: \"#0c6ded\",\n    textAlign: \"center\",\n  },\n  loader: {\n    margin: \"auto\",\n    textAlign: \"center\",\n  },\n}));\n\nexport const ShowWeather = () => {\n  const classes = useStyles();\n\n  const [global, setGlobal] = useContext(GlobalContext);\n  let [location, setLocation] = useState(\n    \"Peshawar, Khyber Pakhtunkhwa, Pakistan\"\n  );\n  let [forecastRes, setForecastRes] = useState();\n\n  useEffect(() => {\n    async function fetchLocation() {\n      const location = await getLocation(global.address);\n      setLocation(location);\n    }\n    fetchLocation();\n  }, [global.address]);\n  useEffect(() => {\n    if (location) {\n      async function fetchForecast() {\n        const gforecast = await forecast(location.latitude, location.longitude);\n        setForecastRes(gforecast);\n      }\n      fetchForecast();\n    }\n  }, [location]);\n  // console.log(forecastRes);\n\n  if (location && forecastRes && forecastRes.current) {\n    return (\n      <div className={classes.root} class=\"p50\">\n        <h2 className={classes.address}>{location.place}</h2>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item sm={4} xs={12}>\n              <h3 className={classes.h2}>Currenly</h3>\n              <p>\n                <i class=\"fas fa-thermometer-quarter fa-2x\"></i>\n                &nbsp;&nbsp;\n                <span class=\"textBig black\">\n                  {forecastRes.current.temp}\n                  &deg;&nbsp;C\n                </span>\n              </p>\n              <div class=\"d-flex\">\n                <p>Weather: &nbsp;</p>\n                <img\n                  src={`images/${forecastRes.current.weather[0].main}.jpg`}\n                  alt=\"weather\"\n                  width=\"40px\"\n                />\n              </div>\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <p>Humidity: {forecastRes.current.humidity}%</p>\n              <p>\n                Wind speed: {forecastRes.current.wind_speed}{\" \"}\n                {windDirection(forecastRes.current.wind_deg)}\n              </p>\n              <p>Dew Point: {forecastRes.current.dew_point}&deg; C</p>\n            </Grid>\n            <Grid item sm={4} xs={6}>\n              <p>Sunrise: {unixToStandard(forecastRes.current.sunrise)}</p>\n              <p>Sunset: {unixToStandard(forecastRes.current.sunset)}</p>\n              <p>Pressure: {forecastRes.current.pressure} hpa</p>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item xs={12} class=\"hourlyGrid\">\n              <h3 className={classes.h3}>Hourly</h3>\n              <div class=\"hourlyReportWraperParent\">\n                {forecastRes.hourly.map((val, ind, arr) => {\n                  if (ind > 0 && ind < 16) {\n                    return (\n                      <div class=\"hourlyReportWraper\">\n                        <h4 id=\"ind\">\n                          <i class=\"far fa-clock\"></i>{\" \"}\n                          {unixToStandard12Hrs(val.dt)}\n                        </h4>\n                        <div class=\"col\">\n                          <p>\n                            <i class=\"fas fa-thermometer-quarter\"></i>\n                            &nbsp;\n                            {val.temp}\n                            &deg;&nbsp;C\n                          </p>\n                          <div class=\"d-flex\">\n                            <p>Weather: &nbsp;</p>\n                            <img\n                              src={`images/${val.weather[0].main}.jpg`}\n                              alt=\"weather\"\n                              width=\"40px\"\n                            />\n                          </div>\n                        </div>\n                        <div class=\"col\">\n                          <p>Humidity: {val.humidity}%</p>\n                          <p>\n                            Wind speed: {val.wind_speed}{\" \"}\n                            {windDirection(val.wind_deg)}\n                          </p>\n                          <p>Dew Point: {val.dew_point}&deg; C</p>\n                        </div>\n                        <div class=\"dividerVertical\"></div>\n                      </div>\n                    );\n                  }\n                  return \"\";\n                })}\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h3 className={classes.h3}>7 Days Report</h3>\n              {forecastRes.daily.map((val, ind, arr) => {\n                if (ind > 0) {\n                  return (\n                    <div>\n                      <h4 id=\"ind\">{unixToStandardFull(val.dt)}</h4>\n                      <Grid container>\n                        <Grid item sm={4} xs={12}>\n                          <p>\n                            <i class=\"fas fa-thermometer-quarter\"></i>\n                            &nbsp;\n                            {val.temp.min} / {val.temp.max}\n                            &deg;&nbsp;C\n                          </p>\n                          <div class=\"d-flex\">\n                            <p>Weather: &nbsp;</p>\n                            <img\n                              src={`images/${val.weather[0].main}.jpg`}\n                              alt=\"weather\"\n                              width=\"40px\"\n                            />\n                          </div>\n                        </Grid>\n                        <Grid item sm={4} xs={12}>\n                          <p>Humidity: {val.humidity}%</p>\n                          <p>\n                            Wind speed: {val.wind_speed}{\" \"}\n                            {windDirection(val.wind_deg)}\n                          </p>\n                          <p>Dew Point: {val.dew_point}&deg; C</p>\n                        </Grid>\n\n                        <Grid item sm={4} xs={6}>\n                          <p>Sunrise: {unixToStandard(val.sunrise)}</p>\n                          <p>Sunset: {unixToStandard(val.sunset)}</p>\n                          <p>Pressure: {val.pressure} hpa</p>\n                        </Grid>\n                      </Grid>\n                      <div class=\"divider\"></div>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </Grid>\n          </Grid>\n        </Paper>\n        {console.clear()}\n      </div>\n    );\n  }\n  if (location) {\n    return (\n      <div className={classes.root}>\n        <h2 className={classes.address}>{location.place}</h2>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid item xs={12}>\n              <div className={classes.loader}>\n                <CircularProgress />\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n        {console.clear()}\n      </div>\n    );\n  }\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 class=\"error\">Please enter valid location!</h2>\n          </Grid>\n        </Grid>\n      </Paper>\n      {console.clear()}\n    </div>\n  );\n};\n",["66","67"],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/forecast.js",[],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/index.js",[],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/getLocation.js",[],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/unixToStandard.js",["68","69"],"export const unixToStandard = (time) => {\n  let date = new Date(time * 1000);\n  let hours = \"0\" + date.getHours();\n  let minutes = \"0\" + date.getMinutes();\n  return `${hours.substr(-2)}:${minutes.substr(-2)}`;\n};\nexport const unixToStandardFull = (time) => {\n  let date = new Date(time * 1000);\n  return date.toDateString();\n};\nexport const unixToStandard12Hrs = (time) => {\n  let date = new Date(time * 1000);\n  let hours = date.getHours();\n  let minutes = \"0\" + date.getMinutes();\n  let amPm = \"AM\";\n  if (hours == 0) {\n    hours = 12;\n  } else if (hours == 12) {\n    amPm = \"PM\";\n  } else if (hours > 12) {\n    hours -= 12;\n    amPm = \"PM\";\n  }\n  hours = \"0\" + hours;\n  return `${hours.substr(-2)}:${minutes.substr(-2)} ${amPm}`;\n};\n","/home/huraira/Computer Learning/GIT Projects/weather-view/src/services/windDirection.js",[],["70","71"],"/home/huraira/Computer Learning/GIT Projects/weather-view/src/Components/Footer.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":31,"column":10,"nodeType":"80","messageId":"81","endLine":31,"endColumn":16},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"78","severity":1,"message":"84","line":41,"column":18,"nodeType":"80","messageId":"81","endLine":41,"endColumn":27},{"ruleId":"72","replacedBy":"85"},{"ruleId":"74","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":16,"column":13,"nodeType":"89","messageId":"90","endLine":16,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":18,"column":20,"nodeType":"89","messageId":"90","endLine":18,"endColumn":22},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"no-unused-vars","'global' is assigned a value but never used.","Identifier","unusedVar",["93"],["94"],"'setGlobal' is assigned a value but never used.",["93"],["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["93"],["94"],"no-global-assign","no-unsafe-negation"]